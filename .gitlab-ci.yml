
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Python.gitlab-ci.yml

# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
image: python:3.8

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  POETRY_VIRTUALENVS_CREATE: "true"
  GITLAB: gitlab.devops.telekom.de
  POETRY_VIRTUALENVS_PATH: "$CI_PROJECT_DIR/.venv"
  key: "${CI_COMMIT_REF_SLUG}"
# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .venv/

stages:
  - build
  - dist

before_script:
  - python -V  # Print out python version for debugging
  - pip install poetry
  - poetry config virtualenvs.in-project true
  - poetry install
  - poetry --version
  - poetry config repositories.gitlab https://${GITLAB}/api/v4/projects/${CI_PROJECT_ID}/packages/pypi
  - poetry config http-basic.gitlab gitlab-ci-token ${CI_JOB_TOKEN}
build:
  stage: build
  script:
    - poetry build
    - python -OO -m PyInstaller netplanner.spec
    # an alternative approach is to install and run:
    - pip install dist/*.whl
    # run the command here
    - netplanner --help
  artifacts:
    paths:
      - dist/*.whl
      - dist/*.tar.gz
      - dist/*

dist:
  stage: dist
  script:
    - poetry build
    - poetry publish -r gitlab
  only:
    - tags